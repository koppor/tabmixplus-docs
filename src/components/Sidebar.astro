---
import type { Props } from '@starlight/props';

import { default as MobileMenuFooter } from '@starlight/components/MobileMenuFooter.astro';
import { default as SidebarSublist } from '@starlight/components/SidebarSublist.astro';

const { sidebar, slug } = Astro.props;

const [page] = slug.split('/');
const isHelpPage = slug.startsWith('help');
const isTroubleshooting = slug.startsWith('troubleshooting');

// collapsed other top level entries
sidebar.forEach(entry => {
  if (entry.type === 'group') {
    const label = entry.label.toLowerCase();
    entry.collapsed = label !== page && label !== 'important links';
  }
});

// add Customizing Tabs Styles
const helpEntries = sidebar.find(entry => entry.label === 'Help');
// @ts-ignore
const displayEntries = helpEntries?.entries?.find(entry => entry.label === 'Display');
displayEntries?.entries.splice(2, 0, {
  type: 'link',
  label: 'Customizing Tabs Styles',
  href: '/help/display/display-tab#customize-tab-styles',
  attrs: { 'data-hash': 'true' },
});
---

<div class="tabmix-sidebar-header">
  <div class="flex justify-center py-2">
    <a
      class="paypal-button"
      href="https://www.paypal.com/donate?hosted_button_id=BZWMH5PS56GAW"
      target="_blank">Make a Donation</a
    >
  </div>

  <div class="tabmix-nav px-6 py-4">
    <ul class="top-level mx-auto flex list-none gap-6 text-base">
      <li>
        <a href="/help/links" class:list={{ 'hover:underline': true, active: isHelpPage }}>Help</a>
      </li>
      <li>
        <a
          href="/troubleshooting/tabmix-does-not-work"
          class:list={{ 'hover:underline': true, active: isTroubleshooting }}>Troubleshooting</a
        >
      </li>
    </ul>
  </div>
</div>

<SidebarSublist sublist={sidebar} />
<div class="md:sl-hidden">
  <MobileMenuFooter {...Astro.props} />
</div>

<script is:inline>
  function updateEntryWithHash() {
    const { pathname, hash = '' } = window.location;
    if (hash) {
      document.querySelector(`a[aria-current="page"]`)?.removeAttribute('aria-current');
      document.querySelector(`a[href="${pathname}${hash}"]`)?.setAttribute('aria-current', 'page');
    }
  }

  addEventListener('hashchange', updateEntryWithHash);
  updateEntryWithHash();
</script>

<script is:inline>
  const key = 'sidebar-position';
  let timeout = 0;

  const sidebar = document.querySelector('#starlight__sidebar');
  if (sidebar) {
    try {
      sidebar.scrollTop = +(sessionStorage.getItem(key) ?? 0);
    } catch {
      /* empty */
    }

    sidebar.addEventListener('scroll', () => {
      if (!timeout) {
        timeout = window.setTimeout(() => {
          sessionStorage.setItem(key, sidebar.scrollTop);
          timeout = 0;
        }, 100);
      }
    });
  }
</script>
