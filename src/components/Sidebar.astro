---
import type { Props } from '@starlight/props';
import type { Link } from '@starlight/utils/navigation.ts';

import { default as MobileMenuFooter } from '@starlight/components/MobileMenuFooter.astro';
import { default as SidebarSublist } from '@starlight/components/SidebarSublist.astro';

const { sidebar, slug } = Astro.props;

const [page] = slug.split('/');
const isHelpPage = slug.startsWith('help');
const isTroubleshooting = slug.startsWith('troubleshooting');

// collapsed other top level entries
sidebar.forEach(entry => {
  if (entry.type === 'group') {
    const label = entry.label.toLowerCase();
    entry.collapsed = label !== page && label !== 'important links';
  }
});

interface CustomLink extends Link {
  attrs: Link['attrs'] & { 'data-hash'?: string };
}

interface Group {
  type: 'group';
  label: string;
  entries: (Link | Group)[];
  collapsed: boolean;
}

// add sidebar entries for links with hashes
const helpEntries = (sidebar.find(entry => entry.label === 'Help') as Group).entries;
helpEntries.forEach(entry => {
  entry.label = entry.label.charAt(0).toUpperCase() + entry.label.slice(1);
});

const cutromLink = {
  type: 'link' as const,
  isCurrent: false,
  badge: undefined,
};

const fileTypeEditor: CustomLink = {
  ...cutromLink,
  label: 'Links - file type editor',
  href: '/help/links#file-type-editor',
  attrs: { 'data-hash': 'true' },
};

const index = helpEntries.findIndex(entry => entry.label === 'Links');
helpEntries.splice(index + 1, 0, fileTypeEditor);

const customizingTabsStyles: CustomLink = {
  ...cutromLink,
  label: 'Customizing Tabs Styles',
  href: '/help/display/display-tab#customize-tab-styles',
  attrs: { 'data-hash': 'true' },
};

const displayEntries = helpEntries.find(entry => entry.label === 'Display') as Group;
displayEntries.entries.splice(2, 0, customizingTabsStyles);
---

<div class="tabmix-sidebar-header">
  <div class="flex justify-center py-2">
    <a
      class="paypal-button"
      href="https://www.paypal.com/donate?hosted_button_id=BZWMH5PS56GAW"
      target="_blank">Make a Donation</a
    >
  </div>

  <div class="tabmix-nav px-6 py-4">
    <ul class="top-level mx-auto flex list-none gap-6 text-base">
      <li>
        <a href="/help/links" class:list={{ 'hover:underline': true, active: isHelpPage }}>Help</a>
      </li>
      <li>
        <a
          href="/troubleshooting/tabmix-does-not-work"
          class:list={{ 'hover:underline': true, active: isTroubleshooting }}>Troubleshooting</a
        >
      </li>
    </ul>
  </div>
</div>

<SidebarSublist sublist={sidebar} />
<div class="md:sl-hidden">
  <MobileMenuFooter {...Astro.props} />
</div>

<script is:inline>
  function updateEntryWithHash() {
    const { pathname, hash = '' } = window.location;
    if (hash) {
      document.querySelector(`a[aria-current="page"]`)?.removeAttribute('aria-current');
      document.querySelector(`a[href="${pathname}${hash}"]`)?.setAttribute('aria-current', 'page');
    }
  }

  addEventListener('hashchange', updateEntryWithHash);
  updateEntryWithHash();
</script>

<script is:inline>
  const key = 'sidebar-position';
  let timeout = 0;

  const sidebar = document.querySelector('#starlight__sidebar');
  if (sidebar) {
    try {
      sidebar.scrollTop = +(sessionStorage.getItem(key) ?? 0);
    } catch {
      /* empty */
    }

    sidebar.addEventListener('scroll', () => {
      if (!timeout) {
        timeout = window.setTimeout(() => {
          sessionStorage.setItem(key, sidebar.scrollTop);
          timeout = 0;
        }, 100);
      }
    });
  }
</script>
